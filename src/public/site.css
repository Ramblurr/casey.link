/*! tailwindcss v4.1.6 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: Inter, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji", Segoe UI Symbol, "Noto Color Emoji";
    --font-serif: ui-serif, Georgia, Cambria, 'Times New Roman', Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-teal-50: oklch(98.4% 0.014 180.72);
    --color-teal-300: oklch(85.5% 0.138 181.071);
    --color-teal-400: oklch(77.7% 0.152 181.912);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-sky-200: oklch(90.1% 0.058 230.902);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-purple-200: oklch(90.2% 0.063 306.703);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-purple-700: oklch(49.6% 0.265 301.924);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-stone-100: oklch(97% 0.001 106.424);
    --color-stone-200: oklch(92.3% 0.003 48.717);
    --color-stone-300: oklch(86.9% 0.005 56.366);
    --color-stone-400: oklch(70.9% 0.01 56.259);
    --color-stone-500: oklch(55.3% 0.013 58.071);
    --color-stone-600: oklch(44.4% 0.011 73.639);
    --color-stone-700: oklch(37.4% 0.01 67.558);
    --color-stone-800: oklch(26.8% 0.007 34.298);
    --color-stone-900: oklch(21.6% 0.006 56.043);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-5xl: 64rem;
    --container-7xl: 80rem;
    --text-xs: 0.8125rem;
    --text-xs--line-height: 1.5rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: 1.5rem;
    --text-base: 1rem;
    --text-base--line-height: 1.75rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: 1.75rem;
    --text-xl: 1.25rem;
    --text-xl--line-height: 2rem;
    --text-2xl: 1.5rem;
    --text-2xl--line-height: 2rem;
    --text-3xl: 1.875rem;
    --text-3xl--line-height: 2.25rem;
    --text-4xl: 2rem;
    --text-4xl--line-height: 2.5rem;
    --text-5xl: 3rem;
    --text-5xl--line-height: 3.5rem;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -0.025em;
    --tracking-wide: 0.025em;
    --leading-tight: 1.25;
    --radius-xs: 0.125rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --blur-xs: 4px;
    --blur-sm: 8px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-dark-orange: #b54726;
    --color-ol-orange: #e76227;
    --color-turquoise: #21b899;
    --color-ol-gray: #201e1d;
    --color-ol-light-gray: #88837c;
    --color-ol-brown: #3f1f10;
    --color-ol-turquoise-500: oklch(79.76% 0.141 175.15);
    --color-ol-turquoise-600: oklch(70.13% 0.127 174.17);
    --color-ol-orange-500: oklch(70.29% 0.151 43.1);
    --color-ol-orange-600: oklch(65.56% 0.179 41.56);
    --color-dark-orange-dark: #d8532d;
    --color-ol-orange-dark: #ff7a42;
    --color-turquoise-dark: #30d2b0;
    --color-ol-gray-dark: #201e1d;
    --color-ol-brown-dark: #5a2b17;
    --base-unit: 1.5rem;
    --text-width: 22rlh;
    --footnote-width: 15rlh;
    --figure-wide-overlap: 0;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .-inset-x-4 {
    inset-inline: calc(var(--spacing) * -4);
  }
  .inset-x-1 {
    inset-inline: calc(var(--spacing) * 1);
  }
  .inset-x-4 {
    inset-inline: calc(var(--spacing) * 4);
  }
  .-inset-y-6 {
    inset-block: calc(var(--spacing) * -6);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-3 {
    top: calc(var(--spacing) * 3);
  }
  .top-8 {
    top: calc(var(--spacing) * 8);
  }
  .top-\[var\(--avatar-top\,0\.75rem\)\] {
    top: var(--avatar-top,0.75rem);
  }
  .top-\[var\(--header-top\,1\.5rem\)\] {
    top: var(--header-top,1.5rem);
  }
  .-bottom-px {
    bottom: -1px;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-50 {
    z-index: 50;
  }
  .order-first {
    order: -9999;
  }
  .order-last {
    order: 9999;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .prose {
    --tw-prose-body: oklch(44.4% 0.011 73.639);
    --tw-prose-headings: oklch(21.6% 0.006 56.043);
    --tw-prose-links: oklch(65.56% 0.179 41.56);
    --tw-prose-links-hover: oklch(54.21% 0.159 40.03);
    --tw-prose-underline: color-mix(in oklab, oklch(70.29% 0.151 43.1) 20%, transparent);
    --tw-prose-underline-hover: oklch(70.29% 0.151 43.1);
    --tw-prose-bold: oklch(21.6% 0.006 56.043);
    --tw-prose-counters: oklch(21.6% 0.006 56.043);
    --tw-prose-bullets: oklch(21.6% 0.006 56.043);
    --tw-prose-hr: oklch(86.9% 0.005 56.366);
    --tw-prose-quote-borders: oklch(92.3% 0.003 48.717);
    --tw-prose-captions: oklch(70.9% 0.01 56.259);
    --tw-prose-code: oklch(37.4% 0.01 67.558);
    --tw-prose-code-bg: color-mix(in oklab, oklch(86.9% 0.005 56.366) 20%, transparent);
    --tw-prose-pre-code: oklch(97% 0.001 106.424);
    --tw-prose-pre-bg: oklch(21.6% 0.006 56.043);
    --tw-prose-pre-border: transparent;
    --tw-prose-th-borders: oklch(92.3% 0.003 48.717);
    --tw-prose-td-borders: oklch(97% 0.001 106.424);
    --tw-prose-invert-body: oklch(92.3% 0.003 48.717);
    --tw-prose-invert-headings: oklch(92.3% 0.003 48.717);
    --tw-prose-invert-links: oklch(70.29% 0.151 43.1);
    --tw-prose-invert-links-hover: oklch(75.79% 0.118 43.92);
    --tw-prose-invert-underline: color-mix(in oklab, oklch(75.79% 0.118 43.92) 30%, transparent);
    --tw-prose-invert-underline-hover: oklch(75.79% 0.118 43.92);
    --tw-prose-invert-bold: oklch(92.3% 0.003 48.717);
    --tw-prose-invert-counters: oklch(92.3% 0.003 48.717);
    --tw-prose-invert-bullets: oklch(92.3% 0.003 48.717);
    --tw-prose-invert-hr: color-mix(in oklab, oklch(37.4% 0.01 67.558) 80%, transparent);
    --tw-prose-invert-quote-borders: oklch(55.3% 0.013 58.071);
    --tw-prose-invert-captions: oklch(55.3% 0.013 58.071);
    --tw-prose-invert-code: oklch(86.9% 0.005 56.366);
    --tw-prose-invert-code-bg: color-mix(in oklab, oklch(92.3% 0.003 48.717) 5%, transparent);
    --tw-prose-invert-pre-code: oklch(97% 0.001 106.424);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 0.4);
    --tw-prose-invert-pre-border: color-mix(in oklab, oklch(92.3% 0.003 48.717) 10%, transparent);
    --tw-prose-invert-th-borders: oklch(37.4% 0.01 67.558);
    --tw-prose-invert-td-borders: oklch(26.8% 0.007 34.298);
    color: var(--tw-prose-body);
    line-height: 1.75rem;
    :where(.prose > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2.5rem;
      margin-bottom: 2.5rem;
    }
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.75rem;
      margin-bottom: 1.75rem;
    }
    :where(h2, h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.25rem;
      line-height: 1.75rem;
      margin-top: 2.5rem;
      margin-bottom: 1rem;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1rem;
      line-height: 1.75rem;
      margin-top: 1rem;
      margin-bottom: 1rem;
    }
    :where(:is(h2, h3) + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-radius: 1.5rem;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      font-weight: 600;
      text-decoration: underline;
      text-decoration-color: var(--tw-prose-underline);
      transition-property: color, text-decoration-color;
      transition-duration: 150ms;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    :where(a:hover):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links-hover);
      text-decoration-color: var(--tw-prose-underline-hover);
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: inline-block;
      color: var(--tw-prose-code);
      font-size: 0.875rem;
      font-weight: 600;
      background-color: var(--tw-prose-code-bg);
      border-radius: 0.5rem;
      padding-left: 0.25rem;
      padding-right: 0.25rem;
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(:is(h2, h3) code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-left: 1.5rem;
      border-left-width: 2px;
      border-left-color: var(--tw-prose-quote-borders);
      font-style: italic;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.875rem;
      line-height: 1.5rem;
      margin-top: 0.75rem;
    }
    :where(figcaption > p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin: 0;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul, ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-left: 1.5rem;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5rem;
      margin-bottom: 0.5rem;
      padding-left: 0.25rem;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-size: 0.875rem;
      font-weight: 600;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(li :is(ol, ul)):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1rem;
      margin-bottom: 1rem;
    }
    :where(li :is(li, p)):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75rem;
      margin-bottom: 0.75rem;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      font-size: 0.875rem;
      font-weight: 500;
      background-color: var(--tw-prose-pre-bg);
      border-radius: 1.5rem;
      padding: 1rem;
      overflow-x: auto;
      border: 1px solid;
      border-color: var(--tw-prose-pre-border);
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: inline;
      color: inherit;
      font-size: inherit;
      font-weight: inherit;
      background-color: transparent;
      border-radius: 0;
      padding: 0;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2rem;
      margin-bottom: 2rem;
      border-top-width: 1px;
      border-color: var(--tw-prose-hr);
      @screen lg {
        margin-left: calc(3rem * -1);
        margin-right: calc(3rem * -1);
      }
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      text-align: left;
      font-size: 0.875rem;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-bottom: 0.5rem;
    }
    :where(thead th:not(:first-child)):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-left: 0.5rem;
    }
    :where(thead th:not(:last-child)):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-right: 0.5rem;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(:is(tbody, tfoot) td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
    }
    :where(:is(tbody, tfoot) td:not(:first-child)):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-left: 0.5rem;
    }
    :where(:is(tbody, tfoot) td:not(:last-child)):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-right: 0.5rem;
    }
  }
  .-m-1 {
    margin: calc(var(--spacing) * -1);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .-my-2 {
    margin-block: calc(var(--spacing) * -2);
  }
  .-my-4 {
    margin-block: calc(var(--spacing) * -4);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-18 {
    margin-top: calc(var(--spacing) * 18);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mt-32 {
    margin-top: calc(var(--spacing) * 32);
  }
  .mt-\[calc\(--spacing\(16\)-\(--spacing\(3\)\)\)\] {
    margin-top: calc(calc(var(--spacing) * 16) - (calc(var(--spacing) * 3)));
  }
  .-mb-3 {
    margin-bottom: calc(var(--spacing) * -3);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-auto {
    margin-left: auto;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-9\/10 {
    aspect-ratio: 9/10;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-7 {
    width: calc(var(--spacing) * 7);
    height: calc(var(--spacing) * 7);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-22 {
    height: calc(var(--spacing) * 22);
  }
  .h-\[300px\] {
    height: 300px;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-0\.5 {
    width: calc(var(--spacing) * 0.5);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-22 {
    width: calc(var(--spacing) * 22);
  }
  .w-44 {
    width: calc(var(--spacing) * 44);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .flex-1 {
    flex: 1;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-none {
    flex: none;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-left {
    transform-origin: left;
  }
  .origin-top {
    transform-origin: top;
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .-rotate-2 {
    rotate: calc(2deg * -1);
  }
  .rotate-2 {
    rotate: 2deg;
  }
  .rotate-3 {
    rotate: 3deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .list-none {
    list-style-type: none;
  }
  .appearance-none {
    appearance: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .content-start {
    align-content: flex-start;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-16 {
    gap: calc(var(--spacing) * 16);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-7 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 7) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 7) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-10 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 10) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 10) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-16 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 16) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 16) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-6 {
    column-gap: calc(var(--spacing) * 6);
  }
  .gap-x-12 {
    column-gap: calc(var(--spacing) * 12);
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .gap-y-16 {
    row-gap: calc(var(--spacing) * 16);
  }
  .gap-y-20 {
    row-gap: calc(var(--spacing) * 20);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-stone-100 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-stone-100);
    }
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-ol-gray {
    border-color: var(--color-ol-gray);
  }
  .border-ol-gray\/10 {
    border-color: color-mix(in srgb, #201e1d 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-ol-gray) 10%, transparent);
    }
  }
  .border-ol-light-gray {
    border-color: var(--color-ol-light-gray);
  }
  .border-ol-light-gray\/10 {
    border-color: color-mix(in srgb, #88837c 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-ol-light-gray) 10%, transparent);
    }
  }
  .border-stone-100 {
    border-color: var(--color-stone-100);
  }
  .bg-ol-light-gray {
    background-color: var(--color-ol-light-gray);
  }
  .bg-ol-light-gray\/30 {
    background-color: color-mix(in srgb, #88837c 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-ol-light-gray) 30%, transparent);
    }
  }
  .bg-ol-orange {
    background-color: var(--color-ol-orange);
  }
  .bg-stone-100 {
    background-color: var(--color-stone-100);
  }
  .bg-stone-200 {
    background-color: var(--color-stone-200);
  }
  .bg-turquoise {
    background-color: var(--color-turquoise);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/90 {
    background-color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .bg-zinc-200 {
    background-color: var(--color-zinc-200);
  }
  .bg-linear-to-r {
    --tw-gradient-position: to right;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to right in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-ol-orange {
    --tw-gradient-from: var(--color-ol-orange);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-ol-orange\/0 {
    --tw-gradient-from: color-mix(in srgb, #e76227 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-ol-orange) 0%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-ol-orange {
    --tw-gradient-via: var(--color-ol-orange);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-ol-orange\/40 {
    --tw-gradient-via: color-mix(in srgb, #e76227 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-ol-orange) 40%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-ol-orange {
    --tw-gradient-to: var(--color-ol-orange);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-ol-orange\/0 {
    --tw-gradient-to: color-mix(in srgb, #e76227 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-ol-orange) 0%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-stone-100 {
    fill: var(--color-stone-100);
  }
  .fill-stone-400 {
    fill: var(--color-stone-400);
  }
  .fill-stone-500 {
    fill: var(--color-stone-500);
  }
  .fill-stone-700 {
    fill: var(--color-stone-700);
  }
  .stroke-ol-light-gray {
    stroke: var(--color-ol-light-gray);
  }
  .stroke-stone-500 {
    stroke: var(--color-stone-500);
  }
  .object-cover {
    object-fit: cover;
  }
  .object-left {
    object-position: left;
  }
  .object-top {
    object-position: top;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-\[calc\(--spacing\(2\)-1px\)\] {
    padding-block: calc(calc(var(--spacing) * 2) - 1px);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pb-16 {
    padding-bottom: calc(var(--spacing) * 16);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-3\.5 {
    padding-left: calc(var(--spacing) * 3.5);
  }
  .text-center {
    text-align: center;
  }
  .align-baseline {
    vertical-align: baseline;
  }
  .align-text-bottom {
    vertical-align: text-bottom;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-inherit {
    color: inherit;
  }
  .text-ol-gray {
    color: var(--color-ol-gray);
  }
  .text-ol-light-gray {
    color: var(--color-ol-light-gray);
  }
  .text-ol-orange {
    color: var(--color-ol-orange);
  }
  .text-ol-orange-600 {
    color: var(--color-ol-orange-600);
  }
  .text-stone-400 {
    color: var(--color-stone-400);
  }
  .text-stone-500 {
    color: var(--color-stone-500);
  }
  .text-stone-600 {
    color: var(--color-stone-600);
  }
  .text-stone-800 {
    color: var(--color-stone-800);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-zinc-400 {
    color: var(--color-zinc-400);
  }
  .text-zinc-600 {
    color: var(--color-zinc-600);
  }
  .text-zinc-800 {
    color: var(--color-zinc-800);
  }
  .italic {
    font-style: italic;
  }
  .underline {
    text-decoration-line: underline;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-ol-gray {
    --tw-shadow-color: #201e1d;
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-ol-gray) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-ol-gray\/5 {
    --tw-shadow-color: color-mix(in srgb, #201e1d 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-ol-gray) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-stone-800 {
    --tw-shadow-color: oklch(26.8% 0.007 34.298);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-stone-800) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-stone-800\/5 {
    --tw-shadow-color: color-mix(in srgb, oklch(26.8% 0.007 34.298) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-stone-800) 5%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-ol-gray {
    --tw-ring-color: var(--color-ol-gray);
  }
  .ring-ol-gray\/5 {
    --tw-ring-color: color-mix(in srgb, #201e1d 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-ol-gray) 5%, transparent);
    }
  }
  .ring-stone-900 {
    --tw-ring-color: var(--color-stone-900);
  }
  .ring-stone-900\/5 {
    --tw-ring-color: color-mix(in srgb, oklch(21.6% 0.006 56.043) 5%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-stone-900) 5%, transparent);
    }
  }
  .ring-zinc-100 {
    --tw-ring-color: var(--color-zinc-100);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-offset-2 {
    outline-offset: 2px;
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[display\,opacity\] {
    transition-property: display,opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-discrete {
    transition-behavior: allow-discrete;
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .group-hover\:scale-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:fill-ol-orange-600 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-ol-orange-600);
      }
    }
  }
  .group-hover\:fill-ol-turquoise-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-ol-turquoise-500);
      }
    }
  }
  .group-hover\:fill-stone-200 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-stone-200);
      }
    }
  }
  .group-hover\:stroke-stone-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        stroke: var(--color-stone-700);
      }
    }
  }
  .group-hover\:text-ol-orange-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-ol-orange-500);
      }
    }
  }
  .group-hover\:text-ol-orange-600 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-ol-orange-600);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-active\:stroke-ol-gray {
    &:is(:where(.group):active *) {
      stroke: var(--color-ol-gray);
    }
  }
  .placeholder\:text-stone-100 {
    &::placeholder {
      color: var(--color-stone-100);
    }
  }
  .backdrop\:backdrop-blur-xs {
    &::backdrop {
      --tw-backdrop-blur: blur(var(--blur-xs));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
  }
  .open\:opacity-100 {
    &:is([open], :popover-open, :open) {
      opacity: 100%;
    }
  }
  .hover\:bg-dark-orange {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-dark-orange);
      }
    }
  }
  .hover\:bg-ol-light-gray\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #88837c 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-ol-light-gray) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-stone-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-stone-100);
      }
    }
  }
  .hover\:bg-turquoise\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #21b899 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-turquoise) 90%, transparent);
        }
      }
    }
  }
  .hover\:text-ol-orange {
    &:hover {
      @media (hover: hover) {
        color: var(--color-ol-orange);
      }
    }
  }
  .hover\:text-ol-turquoise-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-ol-turquoise-600);
      }
    }
  }
  .focus\:border-ol-orange {
    &:focus {
      border-color: var(--color-ol-orange);
    }
  }
  .focus\:ring-4 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-ol-orange\/10 {
    &:focus {
      --tw-ring-color: color-mix(in srgb, #e76227 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-ol-orange) 10%, transparent);
      }
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .active\:bg-ol-brown {
    &:active {
      background-color: var(--color-ol-brown);
    }
  }
  .active\:bg-ol-light-gray\/20 {
    &:active {
      background-color: color-mix(in srgb, #88837c 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-ol-light-gray) 20%, transparent);
      }
    }
  }
  .active\:bg-turquoise\/80 {
    &:active {
      background-color: color-mix(in srgb, #21b899 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-turquoise) 80%, transparent);
      }
    }
  }
  .active\:text-ol-gray\/80 {
    &:active {
      color: color-mix(in srgb, #201e1d 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-ol-gray) 80%, transparent);
      }
    }
  }
  .active\:text-white\/90 {
    &:active {
      color: color-mix(in srgb, #fff 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-white) 90%, transparent);
      }
    }
  }
  .active\:transition-none {
    &:active {
      transition-property: none;
    }
  }
  .motion-reduce\:duration-0 {
    @media (prefers-reduced-motion: reduce) {
      --tw-duration: 0ms;
      transition-duration: 0ms;
    }
  }
  .max-md\:hidden {
    @media (width < 48rem) {
      display: none;
    }
  }
  .sm\:-inset-x-6 {
    @media (width >= 40rem) {
      inset-inline: calc(var(--spacing) * -6);
    }
  }
  .sm\:mt-20 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  .sm\:mt-32 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 32);
    }
  }
  .sm\:w-72 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 72);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:gap-8 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:rounded-2xl {
    @media (width >= 40rem) {
      border-radius: var(--radius-2xl);
    }
  }
  .sm\:px-8 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .sm\:text-3xl {
    @media (width >= 40rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .sm\:text-4xl {
    @media (width >= 40rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .sm\:text-sm {
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .md\:col-span-3 {
    @media (width >= 48rem) {
      grid-column: span 3 / span 3;
    }
  }
  .md\:mt-28 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 28);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:flex-1 {
    @media (width >= 48rem) {
      flex: 1;
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-baseline {
    @media (width >= 48rem) {
      align-items: baseline;
    }
  }
  .md\:justify-center {
    @media (width >= 48rem) {
      justify-content: center;
    }
  }
  .md\:border-l {
    @media (width >= 48rem) {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
  }
  .md\:border-zinc-100 {
    @media (width >= 48rem) {
      border-color: var(--color-zinc-100);
    }
  }
  .md\:pl-6 {
    @media (width >= 48rem) {
      padding-left: calc(var(--spacing) * 6);
    }
  }
  .lg\:order-first {
    @media (width >= 64rem) {
      order: -9999;
    }
  }
  .lg\:row-span-2 {
    @media (width >= 64rem) {
      grid-row: span 2 / span 2;
    }
  }
  .lg\:mt-32 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 32);
    }
  }
  .lg\:max-w-5xl {
    @media (width >= 64rem) {
      max-width: var(--container-5xl);
    }
  }
  .lg\:max-w-none {
    @media (width >= 64rem) {
      max-width: none;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-rows-\[auto_1fr\] {
    @media (width >= 64rem) {
      grid-template-rows: auto 1fr;
    }
  }
  .lg\:gap-y-12 {
    @media (width >= 64rem) {
      row-gap: calc(var(--spacing) * 12);
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:px-12 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 12);
    }
  }
  .lg\:pl-16 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 16);
    }
  }
  .lg\:pl-20 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 20);
    }
  }
  .xl\:pl-24 {
    @media (width >= 80rem) {
      padding-left: calc(var(--spacing) * 24);
    }
  }
  .dark\:block {
    &:where(.dark, .dark *) {
      display: block;
    }
  }
  .dark\:hidden {
    &:where(.dark, .dark *) {
      display: none;
    }
  }
  .dark\:divide-stone-100\/5 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: color-mix(in srgb, oklch(97% 0.001 106.424) 5%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-stone-100) 5%, transparent);
        }
      }
    }
  }
  .dark\:border {
    &:where(.dark, .dark *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .dark\:border-ol-light-gray\/20 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #88837c 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-ol-light-gray) 20%, transparent);
      }
    }
  }
  .dark\:border-stone-700\/40 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(37.4% 0.01 67.558) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-stone-700) 40%, transparent);
      }
    }
  }
  .dark\:border-stone-700\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(37.4% 0.01 67.558) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-stone-700) 50%, transparent);
      }
    }
  }
  .dark\:bg-ol-gray {
    &:where(.dark, .dark *) {
      background-color: var(--color-ol-gray);
    }
  }
  .dark\:bg-ol-gray-dark\/60 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #201e1d 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-ol-gray-dark) 60%, transparent);
      }
    }
  }
  .dark\:bg-ol-gray-dark\/\[0\.25\] {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #201e1d 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-ol-gray-dark) 25%, transparent);
      }
    }
  }
  .dark\:bg-ol-light-gray\/50 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #88837c 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-ol-light-gray) 50%, transparent);
      }
    }
  }
  .dark\:bg-ol-orange-dark {
    &:where(.dark, .dark *) {
      background-color: var(--color-ol-orange-dark);
    }
  }
  .dark\:bg-stone-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-stone-800);
    }
  }
  .dark\:bg-stone-800\/90 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(26.8% 0.007 34.298) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-stone-800) 90%, transparent);
      }
    }
  }
  .dark\:bg-stone-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-stone-900);
    }
  }
  .dark\:bg-stone-900\/50 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(21.6% 0.006 56.043) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-stone-900) 50%, transparent);
      }
    }
  }
  .dark\:bg-turquoise-dark {
    &:where(.dark, .dark *) {
      background-color: var(--color-turquoise-dark);
    }
  }
  .dark\:bg-zinc-500 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-500);
    }
  }
  .dark\:from-ol-orange\/0 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, #e76227 0%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-ol-orange) 0%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:via-ol-orange\/40 {
    &:where(.dark, .dark *) {
      --tw-gradient-via: color-mix(in srgb, #e76227 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-via: color-mix(in oklab, var(--color-ol-orange) 40%, transparent);
      }
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .dark\:to-ol-orange\/0 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, #e76227 0%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-ol-orange) 0%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:fill-stone-400 {
    &:where(.dark, .dark *) {
      fill: var(--color-stone-400);
    }
  }
  .dark\:text-ol-light-gray {
    &:where(.dark, .dark *) {
      color: var(--color-ol-light-gray);
    }
  }
  .dark\:text-ol-orange {
    &:where(.dark, .dark *) {
      color: var(--color-ol-orange);
    }
  }
  .dark\:text-stone-100 {
    &:where(.dark, .dark *) {
      color: var(--color-stone-100);
    }
  }
  .dark\:text-stone-200 {
    &:where(.dark, .dark *) {
      color: var(--color-stone-200);
    }
  }
  .dark\:text-stone-300 {
    &:where(.dark, .dark *) {
      color: var(--color-stone-300);
    }
  }
  .dark\:text-stone-400 {
    &:where(.dark, .dark *) {
      color: var(--color-stone-400);
    }
  }
  .dark\:text-stone-500 {
    &:where(.dark, .dark *) {
      color: var(--color-stone-500);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:text-zinc-100 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-100);
    }
  }
  .dark\:text-zinc-400 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-400);
    }
  }
  .dark\:text-zinc-500 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-500);
    }
  }
  .dark\:ring-0 {
    &:where(.dark, .dark *) {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:ring-stone-800 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-stone-800);
    }
  }
  .dark\:ring-white\/10 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:ring-zinc-300\/20 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(87.1% 0.006 286.286) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-zinc-300) 20%, transparent);
      }
    }
  }
  .dark\:prose-invert {
    &:where(.dark, .dark *) {
      --tw-prose-body: var(--tw-prose-invert-body);
      --tw-prose-headings: var(--tw-prose-invert-headings);
      --tw-prose-links: var(--tw-prose-invert-links);
      --tw-prose-links-hover: var(--tw-prose-invert-links-hover);
      --tw-prose-underline: var(--tw-prose-invert-underline);
      --tw-prose-underline-hover: var(--tw-prose-invert-underline-hover);
      --tw-prose-bold: var(--tw-prose-invert-bold);
      --tw-prose-counters: var(--tw-prose-invert-counters);
      --tw-prose-bullets: var(--tw-prose-invert-bullets);
      --tw-prose-hr: var(--tw-prose-invert-hr);
      --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
      --tw-prose-captions: var(--tw-prose-invert-captions);
      --tw-prose-code: var(--tw-prose-invert-code);
      --tw-prose-code-bg: var(--tw-prose-invert-code-bg);
      --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
      --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
      --tw-prose-pre-border: var(--tw-prose-invert-pre-border);
      --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
      --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
    }
  }
  .dark\:group-hover\:fill-ol-orange-500 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-ol-orange-500);
        }
      }
    }
  }
  .dark\:group-hover\:stroke-stone-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-stone-400);
        }
      }
    }
  }
  .dark\:group-hover\:stroke-white {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-white);
        }
      }
    }
  }
  .dark\:group-hover\:text-ol-orange-500 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-ol-orange-500);
        }
      }
    }
  }
  .dark\:group-active\:stroke-white {
    &:where(.dark, .dark *) {
      &:is(:where(.group):active *) {
        stroke: var(--color-white);
      }
    }
  }
  .dark\:hover\:bg-dark-orange-dark {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-dark-orange-dark);
        }
      }
    }
  }
  .dark\:hover\:bg-ol-gray-dark\/80 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #201e1d 80%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-ol-gray-dark) 80%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-stone-900\/50 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(21.6% 0.006 56.043) 50%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-stone-900) 50%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-turquoise-dark\/90 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #30d2b0 90%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-turquoise-dark) 90%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:text-ol-orange {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-ol-orange);
        }
      }
    }
  }
  .dark\:hover\:text-ol-turquoise-500 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-ol-turquoise-500);
        }
      }
    }
  }
  .dark\:hover\:text-white {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .dark\:hover\:ring-white\/20 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: color-mix(in srgb, #fff 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:focus\:border-ol-orange-dark {
    &:where(.dark, .dark *) {
      &:focus {
        border-color: var(--color-ol-orange-dark);
      }
    }
  }
  .dark\:focus\:ring-ol-orange-dark\/10 {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-ring-color: color-mix(in srgb, #ff7a42 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-ol-orange-dark) 10%, transparent);
        }
      }
    }
  }
  .dark\:active\:bg-ol-brown-dark {
    &:where(.dark, .dark *) {
      &:active {
        background-color: var(--color-ol-brown-dark);
      }
    }
  }
  .dark\:active\:bg-ol-gray-dark\/60 {
    &:where(.dark, .dark *) {
      &:active {
        background-color: color-mix(in srgb, #201e1d 60%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-ol-gray-dark) 60%, transparent);
        }
      }
    }
  }
  .dark\:active\:bg-turquoise-dark\/80 {
    &:where(.dark, .dark *) {
      &:active {
        background-color: color-mix(in srgb, #30d2b0 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-turquoise-dark) 80%, transparent);
        }
      }
    }
  }
  .dark\:active\:text-white\/80 {
    &:where(.dark, .dark *) {
      &:active {
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  }
  .dark\:active\:text-white\/90 {
    &:where(.dark, .dark *) {
      &:active {
        color: color-mix(in srgb, #fff 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 90%, transparent);
        }
      }
    }
  }
  .md\:dark\:border-zinc-700\/40 {
    @media (width >= 48rem) {
      &:where(.dark, .dark *) {
        border-color: color-mix(in srgb, oklch(37% 0.013 285.805) 40%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-zinc-700) 40%, transparent);
        }
      }
    }
  }
  .starting\:open\:opacity-0 {
    @starting-style {
      &:is([open], :popover-open, :open) {
        opacity: 0%;
      }
    }
  }
  .\[\@media_not_\(prefers-color-scheme\:dark\)\]\:fill-teal-400\/10 {
    @media not (prefers-color-scheme:dark) {
      fill: color-mix(in srgb, oklch(77.7% 0.152 181.912) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        fill: color-mix(in oklab, var(--color-teal-400) 10%, transparent);
      }
    }
  }
  .\[\@media_not_\(prefers-color-scheme\:dark\)\]\:stroke-teal-500 {
    @media not (prefers-color-scheme:dark) {
      stroke: var(--color-teal-500);
    }
  }
  .\[\@media\(prefers-color-scheme\:dark\)\]\:fill-teal-50 {
    @media (prefers-color-scheme:dark) {
      fill: var(--color-teal-50);
    }
  }
  .\[\@media\(prefers-color-scheme\:dark\)\]\:stroke-teal-500 {
    @media (prefers-color-scheme:dark) {
      stroke: var(--color-teal-500);
    }
  }
  .\[\@media\(prefers-color-scheme\:dark\)\]\:group-hover\:fill-teal-50 {
    @media (prefers-color-scheme:dark) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          fill: var(--color-teal-50);
        }
      }
    }
  }
  .\[\@media\(prefers-color-scheme\:dark\)\]\:group-hover\:stroke-stone-400 {
    @media (prefers-color-scheme:dark) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-stone-400);
        }
      }
    }
  }
  .\[\@media\(prefers-color-scheme\:dark\)\]\:group-hover\:stroke-teal-600 {
    @media (prefers-color-scheme:dark) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          stroke: var(--color-teal-600);
        }
      }
    }
  }
}
@layer components {
  code[class*="language-"], pre[class*="language-"] {
    color: #ccc;
    background: 0 0;
    font-size: 1em;
    text-align: left;
    white-space: pre;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal;
    line-height: 1.5;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    -webkit-hyphens: none;
    -moz-hyphens: none;
    -ms-hyphens: none;
    hyphens: none;
  }
  pre[class*="language-"] {
    padding: 1em;
    margin: 0.5em 0;
    overflow: auto;
  }
  :not(pre) > code[class*="language-"], pre[class*="language-"] {
    background: #2d2d2d;
  }
  :not(pre) > code[class*="language-"] {
    padding: 0.1em;
    border-radius: 0.3em;
    white-space: normal;
  }
  .token.block-comment, .token.cdata, .token.comment, .token.doctype, .token.prolog {
    color: #999;
  }
  .token.punctuation {
    color: #ccc;
  }
  .token.attr-name, .token.deleted, .token.namespace, .token.tag {
    color: #e2777a;
  }
  .token.function-name {
    color: #6196cc;
  }
  .token.boolean, .token.function, .token.number {
    color: #f08d49;
  }
  .token.class-name, .token.constant, .token.property, .token.symbol {
    color: #f8c555;
  }
  .token.atrule, .token.builtin, .token.important, .token.keyword, .token.selector {
    color: #cc99cd;
  }
  .token.attr-value, .token.char, .token.regex, .token.string, .token.variable {
    color: #7ec699;
  }
  .token.entity, .token.operator, .token.url {
    color: #67cdcc;
  }
  .token.bold, .token.important {
    font-weight: 700;
  }
  .token.italic {
    font-style: italic;
  }
  .token.entity {
    cursor: help;
  }
  .token.inserted {
    color: green;
  }
  pre[data-line] {
    position: relative;
    padding: 1em 0 1em 3em;
  }
  .line-highlight {
    position: absolute;
    left: 0;
    right: 0;
    padding: inherit 0;
    margin-top: 1em;
    background: hsla(24, 20%, 50%, 0.08);
    background: linear-gradient( to right, hsla(24, 20%, 50%, 0.1) 70%, hsla(24, 20%, 50%, 0) );
    pointer-events: none;
    line-height: inherit;
    white-space: pre;
  }
  @media print {
    .line-highlight {
      -webkit-print-color-adjust: exact;
      color-adjust: exact;
    }
  }
  .line-highlight:before, .line-highlight[data-end]:after {
    content: attr(data-start);
    position: absolute;
    top: 0.4em;
    left: 0.6em;
    min-width: 1em;
    padding: 0 0.5em;
    background-color: hsla(24, 20%, 50%, 0.4);
    color: #f4f1ef;
    font: bold 65%/1.5 sans-serif;
    text-align: center;
    vertical-align: 0.3em;
    border-radius: 999px;
    text-shadow: none;
    box-shadow: 0 1px #fff;
  }
  .line-highlight[data-end]:after {
    content: attr(data-end);
    top: auto;
    bottom: 0.4em;
  }
  .line-numbers .line-highlight:after, .line-numbers .line-highlight:before {
    content: none;
  }
  pre[id].linkable-line-numbers span.line-numbers-rows {
    pointer-events: all;
  }
  pre[id].linkable-line-numbers span.line-numbers-rows > span:before {
    cursor: pointer;
  }
  pre[id].linkable-line-numbers span.line-numbers-rows > span:hover:before {
    background-color: rgba(128, 128, 128, 0.2);
  }
  pre[class*="language-"].line-numbers {
    position: relative;
    padding-left: 3.8em;
    counter-reset: linenumber;
  }
  pre[class*="language-"].line-numbers > code {
    position: relative;
    white-space: inherit;
  }
  .line-numbers .line-numbers-rows {
    position: absolute;
    pointer-events: none;
    top: 0;
    font-size: 100%;
    left: -3.8em;
    width: 3em;
    letter-spacing: -1px;
    border-right: 1px solid #999;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  .line-numbers-rows > span {
    display: block;
    counter-increment: linenumber;
  }
  .line-numbers-rows > span:before {
    content: counter(linenumber);
    color: #999;
    display: block;
    padding-right: 0.8em;
    text-align: right;
  }
  .token a {
    color: inherit;
  }
  div.code-toolbar {
    position: relative;
  }
  div.code-toolbar > .toolbar {
    position: absolute;
    z-index: 10;
    top: 0.3em;
    right: 0.2em;
    transition: opacity 0.3s ease-in-out;
    opacity: 0;
  }
  div.code-toolbar:hover > .toolbar {
    opacity: 1;
  }
  div.code-toolbar:focus-within > .toolbar {
    opacity: 1;
  }
  div.code-toolbar > .toolbar > .toolbar-item {
    display: inline-block;
  }
  div.code-toolbar > .toolbar > .toolbar-item > a {
    cursor: pointer;
  }
  div.code-toolbar > .toolbar > .toolbar-item > button {
    background: 0 0;
    border: 0;
    color: inherit;
    font: inherit;
    line-height: normal;
    overflow: visible;
    padding: 0;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }
  div.code-toolbar > .toolbar > .toolbar-item > a, div.code-toolbar > .toolbar > .toolbar-item > button, div.code-toolbar > .toolbar > .toolbar-item > span {
    color: #bbb;
    font-size: 0.8em;
    padding: 0 0.5em;
    background: #f5f2f0;
    background: rgba(224, 224, 224, 0.2);
    box-shadow: 0 2px 0 0 rgba(0, 0, 0, 0.2);
    border-radius: 0.5em;
  }
  div.code-toolbar > .toolbar > .toolbar-item > a:focus, div.code-toolbar > .toolbar > .toolbar-item > a:hover, div.code-toolbar > .toolbar > .toolbar-item > button:focus, div.code-toolbar > .toolbar > .toolbar-item > button:hover, div.code-toolbar > .toolbar > .toolbar-item > span:focus, div.code-toolbar > .toolbar > .toolbar-item > span:hover {
    color: inherit;
    text-decoration: none;
  }
}
@font-face {
  font-family: InterVariable;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("/font//font/InterVariable.woff2") format("woff2");
}
@font-face {
  font-family: InterVariable;
  font-style: italic;
  font-weight: 100 900;
  font-display: swap;
  src: url("/font//font/InterVariable-Italic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 100;
  font-display: swap;
  src: url("/font/Inter-Thin.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 100;
  font-display: swap;
  src: url("/font/Inter-ThinItalic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 200;
  font-display: swap;
  src: url("/font/Inter-ExtraLight.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 200;
  font-display: swap;
  src: url("/font/Inter-ExtraLightItalic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url("/font/Inter-Light.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 300;
  font-display: swap;
  src: url("/font/Inter-LightItalic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("/font/Inter-Regular.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 400;
  font-display: swap;
  src: url("/font/Inter-Italic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("/font/Inter-Medium.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 500;
  font-display: swap;
  src: url("/font/Inter-MediumItalic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url("/font/Inter-SemiBold.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 600;
  font-display: swap;
  src: url("/font/Inter-SemiBoldItalic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url("/font/Inter-Bold.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 700;
  font-display: swap;
  src: url("/font/Inter-BoldItalic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 800;
  font-display: swap;
  src: url("/font/Inter-ExtraBold.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 800;
  font-display: swap;
  src: url("/font/Inter-ExtraBoldItalic.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: normal;
  font-weight: 900;
  font-display: swap;
  src: url("/font/Inter-Black.woff2") format("woff2");
}
@font-face {
  font-family: "Inter";
  font-style: italic;
  font-weight: 900;
  font-display: swap;
  src: url("/font/Inter-BlackItalic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 100;
  font-display: swap;
  src: url("/font/InterDisplay-Thin.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 100;
  font-display: swap;
  src: url("/font/InterDisplay-ThinItalic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 200;
  font-display: swap;
  src: url("/font/InterDisplay-ExtraLight.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 200;
  font-display: swap;
  src: url("/font/InterDisplay-ExtraLightItalic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: url("/font/InterDisplay-Light.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 300;
  font-display: swap;
  src: url("/font/InterDisplay-LightItalic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("/font/InterDisplay-Regular.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 400;
  font-display: swap;
  src: url("/font/InterDisplay-Italic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("/font/InterDisplay-Medium.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 500;
  font-display: swap;
  src: url("/font/InterDisplay-MediumItalic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url("/font/InterDisplay-SemiBold.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 600;
  font-display: swap;
  src: url("/font/InterDisplay-SemiBoldItalic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url("/font/InterDisplay-Bold.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 700;
  font-display: swap;
  src: url("/font/InterDisplay-BoldItalic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 800;
  font-display: swap;
  src: url("/font/InterDisplay-ExtraBold.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 800;
  font-display: swap;
  src: url("/font/InterDisplay-ExtraBoldItalic.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: normal;
  font-weight: 900;
  font-display: swap;
  src: url("/font/InterDisplay-Black.woff2") format("woff2");
}
@font-face {
  font-family: "InterDisplay";
  font-style: italic;
  font-weight: 900;
  font-display: swap;
  src: url("/font/InterDisplay-BlackItalic.woff2") format("woff2");
}
@font-feature-values InterVariable {
  @character-variant {
    cv01: 1;
    cv02: 2;
    cv03: 3;
    cv04: 4;
    cv05: 5;
    cv06: 6;
    cv07: 7;
    cv08: 8;
    cv09: 9;
    cv10: 10;
    cv11: 11;
    cv12: 12;
    cv13: 13;
    alt-1: 1;
    alt-3: 9;
    open-4: 2;
    open-6: 3;
    open-9: 4;
    lc-l-with-tail: 5;
    simplified-u: 6;
    alt-double-s: 7;
    uc-i-with-serif: 8;
    uc-g-with-spur: 10;
    single-story-a: 11;
    compact-lc-f: 12;
    compact-lc-t: 13;
  }
  @styleset {
    ss01: 1;
    ss02: 2;
    ss03: 3;
    ss04: 4;
    ss05: 5;
    ss06: 6;
    ss07: 7;
    ss08: 8;
    open-digits: 1;
    disambiguation: 2;
    disambiguation-except-zero: 4;
    round-quotes-and-commas: 3;
    square-punctuation: 7;
    square-quotes: 8;
    circled-characters: 5;
    squared-characters: 6;
  }
}
@font-feature-values Inter {
  @character-variant {
    cv01: 1;
    cv02: 2;
    cv03: 3;
    cv04: 4;
    cv05: 5;
    cv06: 6;
    cv07: 7;
    cv08: 8;
    cv09: 9;
    cv10: 10;
    cv11: 11;
    cv12: 12;
    cv13: 13;
    alt-1: 1;
    alt-3: 9;
    open-4: 2;
    open-6: 3;
    open-9: 4;
    lc-l-with-tail: 5;
    simplified-u: 6;
    alt-double-s: 7;
    uc-i-with-serif: 8;
    uc-g-with-spur: 10;
    single-story-a: 11;
    compact-lc-f: 12;
    compact-lc-t: 13;
  }
  @styleset {
    ss01: 1;
    ss02: 2;
    ss03: 3;
    ss04: 4;
    ss05: 5;
    ss06: 6;
    ss07: 7;
    ss08: 8;
    open-digits: 1;
    disambiguation: 2;
    disambiguation-except-zero: 4;
    round-quotes-and-commas: 3;
    square-punctuation: 7;
    square-quotes: 8;
    circled-characters: 5;
    squared-characters: 6;
  }
}
@font-feature-values InterDisplay {
  @character-variant {
    cv01: 1;
    cv02: 2;
    cv03: 3;
    cv04: 4;
    cv05: 5;
    cv06: 6;
    cv07: 7;
    cv08: 8;
    cv09: 9;
    cv10: 10;
    cv11: 11;
    cv12: 12;
    cv13: 13;
    alt-1: 1;
    alt-3: 9;
    open-4: 2;
    open-6: 3;
    open-9: 4;
    lc-l-with-tail: 5;
    simplified-u: 6;
    alt-double-s: 7;
    uc-i-with-serif: 8;
    uc-g-with-spur: 10;
    single-story-a: 11;
    compact-lc-f: 12;
    compact-lc-t: 13;
  }
  @styleset {
    ss01: 1;
    ss02: 2;
    ss03: 3;
    ss04: 4;
    ss05: 5;
    ss06: 6;
    ss07: 7;
    ss08: 8;
    open-digits: 1;
    disambiguation: 2;
    disambiguation-except-zero: 4;
    round-quotes-and-commas: 3;
    square-punctuation: 7;
    square-quotes: 8;
    circled-characters: 5;
    squared-characters: 6;
  }
}
.ol-logo {
  color: #201e1d;
  .flask, .cactus {
    fill: currentColor;
  }
  .bubble {
    fill: #e76227;
  }
  .logo-text {
    fill: #e76227;
    stroke: black;
  }
}
html.dark .ol-logo {
  color: white;
}
@media (prefers-color-scheme: light) {
  .ol-logo {
    color: #201e1d;
  }
  html.dark .ol-logo {
    color: white;
  }
}
@media (prefers-color-scheme: dark) {
  .ol-logo {
    color: white;
  }
  html:not(.dark) .ol-logo {
    color: #201e1d;
  }
}
#article-container {
  position: relative;
  margin-inline: auto;
  width: 100%;
  max-width: var(--container-7xl);
  display: grid;
  --left-gutter: calc(var(--spacing) * 2);
  --right-gutter: calc(var(--spacing) * 2);
  --left-gutter-max: 1fr;
  --content-width: calc(100% - var(--left-gutter) - var(--right-gutter));
  grid-template-columns: minmax(var(--left-gutter), var(--left-gutter-max)) [content-start] minmax(0, var(--content-width)) [content-end] minmax(var(--right-gutter), 1fr);
  @media (width >= 40rem) {
    --left-gutter: calc(var(--spacing) * 4);
    --right-gutter: calc(var(--spacing) * 8);
    --content-width: var(--container-2xl);
  }
  @media (width >= 64rem) {
    padding-inline: calc(var(--spacing) * 8);
    --left-gutter: calc(var(--spacing) * 16);
    --right-gutter: calc(var(--spacing) * 8);
    --right-gutter-width: calc(var(--spacing) * 8);
    &:has(.sidenote-column, .aside) {
      --right-gutter: calc(var(--spacing) * 64 + 1rlh);
      --right-gutter-width: calc(var(--spacing) * 64 + 1rlh);
      --left-gutter-max: var(--left-gutter);
    }
  }
  article {
    grid-column: content-start / content-end;
  }
}
.sidenote-targeted {
  border-radius: var(--radius-xs);
  background-color: var(--color-stone-200);
  &:where(.dark, .dark *) {
    background-color: var(--color-stone-800);
  }
  --sidenote-hover-bg: var(--color-stone-200);
  &:where(.dark, .dark *) {
    --sidenote-hover-bg: var(--color-stone-400);
  }
  box-shadow: 0 0 0 2px var(--sidenote-hover-bg);
}
.sidenote-ref {
  margin: calc(var(--spacing) * 0);
  display: inline-block;
  height: auto;
  width: auto;
  border-style: var(--tw-border-style);
  border-width: 0px;
  background-color: transparent;
  padding-inline: calc(var(--spacing) * 1);
  color: inherit;
  text-decoration-color: inherit;
  &:where(.dark, .dark *) {
    color: inherit;
  }
  transition: box-shadow 0.15s ease 0.05s;
  &:hover {
    border-radius: var(--radius-xs);
    background-color: var(--color-stone-200);
    &:where(.dark, .dark *) {
      background-color: var(--color-stone-800);
    }
    --sidenote-ref-hover-bg: var(--color-stone-200);
    &:where(.dark, .dark *) {
      --sidenote-ref-hover-bg: var(--color-stone-400);
    }
    box-shadow: 0 0 0 2px var(--sidenote-ref-hover-bg);
  }
  sup {
    top: 0;
    vertical-align: super;
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-leading: calc(var(--spacing) * 3);
    line-height: calc(var(--spacing) * 3);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: inherit;
    --tw-numeric-figure: lining-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
    &:where(.dark, .dark *) {
      color: inherit;
    }
  }
}
.sidenote {
  margin-top: calc(var(--spacing) * 4);
  display: block;
  width: 100%;
  background-color: var(--color-stone-100);
  padding: calc(var(--spacing) * 2);
  font-family: var(--font-sans);
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
  &:where(.dark, .dark *) {
    background-color: var(--color-stone-800);
  }
  transition: box-shadow 0.15s ease 0.05s;
  &:hover {
    border-radius: var(--radius-xs);
    background-color: var(--color-stone-200);
    &:where(.dark, .dark *) {
      background-color: var(--color-stone-800);
    }
    --sidenote-hover-bg: var(--color-stone-200);
    &:where(.dark, .dark *) {
      --sidenote-hover-bg: var(--color-stone-400);
    }
    box-shadow: 0 0 0 2px var(--sidenote-hover-bg);
  }
  @media (width >= 64rem) {
    width: fit-content;
    background-color: transparent;
    padding: calc(var(--spacing) * 1);
    &:where(.dark, .dark *) {
      background-color: transparent;
    }
  }
  sup {
    top: 0;
    margin-right: calc(var(--spacing) * 1);
  }
}
.sidenote-container:has(.sidenote-ref:hover) .sidenote {
  @media (width >= 64rem) {
    border-radius: var(--radius-xs);
    background-color: var(--color-stone-200);
    &:where(.dark, .dark *) {
      background-color: var(--color-stone-800);
    }
    --sidenote-hover-bg: var(--color-stone-200);
    &:where(.dark, .dark *) {
      --sidenote-hover-bg: var(--color-stone-400);
    }
    box-shadow: 0 0 0 2px var(--sidenote-hover-bg);
  }
}
.sidenote-container:has(.sidenote:hover) .sidenote-ref {
  @media (width >= 64rem) {
    border-radius: var(--radius-xs);
    background-color: var(--color-stone-200);
    &:where(.dark, .dark *) {
      background-color: var(--color-stone-800);
    }
    --sidenote-ref-hover-bg: var(--color-stone-200);
    &:where(.dark, .dark *) {
      --sidenote-ref-hover-bg: var(--color-stone-400);
    }
    box-shadow: 0 0 0 2px var(--sidenote-ref-hover-bg);
  }
}
.sidenote-container {
  margin-bottom: calc(var(--spacing) * 4);
  @media (width >= 64rem) {
    position: relative;
    margin-bottom: calc(var(--spacing) * 0);
    display: flex;
    justify-content: space-between;
  }
}
.sidenote-main-col *:last-child {
  margin-bottom: calc(var(--spacing) * 0);
}
.sidenote-main-col {
  width: 100%;
}
.sidenote-main-col > ul > li:first-child, .sidenote-main-col > ol > li:first-child {
  margin-top: calc(var(--spacing) * 0);
}
.sidenote .sidenote-number {
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  @media (width >= 64rem) {
    margin-right: calc(var(--spacing) * 1);
    display: inline-block;
  }
}
@media (width >= 64rem) {
  .sidenote-gutter-lg {
    --right-gutter-width: calc((var(--container-5xl) / 2) - var(--spacing) * 8);
  }
}
.sidenote-column {
  @media (width >= 64rem) {
    flex-shrink: 0;
    --sidenote-boost: 0;
    --sidenote-width: calc(
      var(--right-gutter-width) - 2px + var(--spacing) * var(--sidenote-boost)
    );
    --sidenote-max-width: calc(
      var(--right-gutter-width) - 2px + var(--spacing) * var(--sidenote-boost)
    );
    width: var(--sidenote-width);
    margin-right: calc(-1 * var(--sidenote-max-width));
    margin-top: calc(var(--spacing) * 7);
  }
  @media (width >= 80rem) {
    --sidenote-boost: 16;
    padding-left: calc(var(--spacing) * var(--sidenote-boost));
  }
}
.sidenote:first-child {
  @media (width >= 64rem) {
    margin-top: calc(var(--spacing) * 1);
  }
}
.sidenotes-layout .markdown-viewer {
  @media (width >= 64rem) {
    padding-right: 241px;
  }
}
.sidenotes-layout h1 {
  @media (width >= 64rem) {
    width: 756px;
  }
}
@keyframes sidenote-pulse {
  0% {
    box-shadow: 0 0 0 15px var(--sidenote-hover-bg);
  }
  100% {
    box-shadow: 0 0 0 2px var(--sidenote-hover-bg);
  }
}
.animate-sidenote {
  animation: sidenote-pulse 0.6s ease-out forwards;
}
.prose {
  a:has(img) {
    white-space: nowrap;
  }
  a:has(img) img.inline {
    margin-right: calc(var(--spacing) * 1);
  }
  code {
    word-wrap: break-word;
    word-break: break-word;
    white-space: pre-wrap;
  }
  figure {
    text-align: center;
    img {
      display: inline-block;
    }
  }
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-leading: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
    }
  }
}
